from aiogram import Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards import get_main_menu, get_back_button
from database import get_user_orders
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from github_integration import get_github_activity


router = Router()

@router.callback_query(lambda c: c.data == "info")
async def show_info(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = (
            "üë®‚Äçüíª –Ø —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ C# –∏ Python.\n\n"
            "üìö –ú–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:\n"
            "- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Django –∏ Flask, Web-App (C#)\n"
            "- –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤ –¥–ª—è Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º aiogram\n"
            "- –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö (PostgreSQL, SQLite, MsSQL)\n"
            "- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Git –∏ GitHub\n"
            "- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ C# –∏ Python (–ø—Ä–æ—Å—Ç—ã–µ)\n\n"
            "üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –∏—Å–ø–æ–ª—å–∑—É—é:\n"
            "- Visual Studio Code, Visual Studio 2022\n"
            "- Docker (–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–∑—É—á–µ–Ω–∏—è)\n"
            "- CI/CD (GitHub Actions)\n\n"
        )
    else:
        text = (
            "üë®‚Äçüíª I develop my projects in C# and Python.\n\n"
            "üìö My main skills:\n"
            "- Web application development with Django and Flask, Web-App (C#)\n"
            "- Creating Telegram bots using aiogram\n"
            "- Working with databases (PostgreSQL, SQLite, MsSQL)\n"
            "- Experience with Git and GitHub\n"
            "- Development of desktop applications in C# and Python (simple)\n\n"
            "üîß Tools and technologies I use:\n"
            "- Visual Studio Code, Visual Studio 2022\n"
            "- Docker (Under study)\n"
            "- CI/CD (GitHub Actions)\n\n"
        )
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()

@router.callback_query(lambda c: c.data == "projects")
async def show_projects(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "üíª –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç: [GitHub](https://github.com/ZeroStalker3)."
    else:
        text = "üíª Project examples: [GitHub](https://github.com/ZeroStalker3)."
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()

@router.callback_query(lambda c: c.data == "contacts")
async def show_contacts(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π: \n\nTelegram: @Shad_Zero \nEmail: (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ)"
    else:
        text = "üìû Contact me: Telegram: \n\n@Shad_Zero \nEmail: (temporarily unavailable)"
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()

@router.callback_query(lambda c: c.data == "resume")
async def show_resume(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "üìÑ –ú–æ–µ —Ä–µ–∑—é–º–µ: [–°–∫–∞—á–∞—Ç—å PDF](–ü–æ—è–≤–∏—Ç—Å—è —á—É—Ç—å –ø–æ–∑–∂–µ)."
    else:
        text = "üìÑ My resume: [Download PDF](Coming soon)."
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()

@router.callback_query(lambda c: c.data == "reviews")
async def show_reviews(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "‚≠ê –ü–æ–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ—Ç, –Ω–æ —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è!"
    else:
        text = "‚≠ê No reviews yet, but they will appear soon!"
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()

@router.callback_query(lambda c: c.data == "back")
async def go_back(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ! \n\n–≠—Ç–æ –±–æ—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ –±–æ—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å–æ –º–Ω–æ–π.\n–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:"
    else:
        text = "Welcome back! \n\nThis is a portfolio bot and a bot to contact me.\nChoose the section you are interested in:"
    
    await callback.message.edit_text(text, reply_markup=get_main_menu(language))
    await callback.answer()


# –¢–µ—Å—Ç–≤–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å –≤—ã–≤–æ–¥–æ–º –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–µ–Ω—Ç —è –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è—é –≤ –æ—Å–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
@router.callback_query(lambda c: c.data == "github_activity")
async def show_github_activity(callback: CallbackQuery, state: FSMContext):
    activity = get_github_activity()
    
    data = await state.get_data()
    language = data.get("language", "ru")
    
    if language == "ru":
        text = "–ú–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ GitHub:\n\n"
    else:
        text = "My GitHub activity:\n\n"
    
    for repo in activity:
        text += f"üìÅ {repo['name']}\n"
        text += f"üìù {repo['description']}\n"
        text += f"‚≠ê {repo['stars']}\n"
        text += f"üïí –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {repo['last_updated']}\n\n"
    
    await callback.message.edit_text(text, reply_markup=get_back_button(language))
    await callback.answer()